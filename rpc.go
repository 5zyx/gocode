// WARNING! Autogenerated by goremote, don't touch.

package main

import (
	"net/rpc"

	"github.com/mdempsky/gocode/suggest"
)

type RPC struct {
}

// wrapper for: server_auto_complete

type Args_auto_complete struct {
	Arg0 []byte
	Arg1 string
	Arg2 int
	Arg3 packedContext
}
type Reply_auto_complete struct {
	Arg0 []suggest.Candidate
	Arg1 int
}

func (r *RPC) RPC_auto_complete(args *Args_auto_complete, reply *Reply_auto_complete) error {
	reply.Arg0, reply.Arg1 = server_auto_complete(args.Arg0, args.Arg1, args.Arg2, args.Arg3)
	return nil
}
func client_auto_complete(cli *rpc.Client, Arg0 []byte, Arg1 string, Arg2 int, Arg3 packedContext) (c []suggest.Candidate, d int) {
	var args Args_auto_complete
	var reply Reply_auto_complete
	args.Arg0 = Arg0
	args.Arg1 = Arg1
	args.Arg2 = Arg2
	args.Arg3 = Arg3
	err := cli.Call("RPC.RPC_auto_complete", &args, &reply)
	if err != nil {
		panic(err)
	}
	return reply.Arg0, reply.Arg1
}

// wrapper for: server_exit

type Args_exit struct {
	Arg0 int
}
type Reply_exit struct {
	Arg0 int
}

func (r *RPC) RPC_exit(args *Args_exit, reply *Reply_exit) error {
	reply.Arg0 = server_exit(args.Arg0)
	return nil
}
func client_exit(cli *rpc.Client, Arg0 int) int {
	var args Args_exit
	var reply Reply_exit
	args.Arg0 = Arg0
	err := cli.Call("RPC.RPC_exit", &args, &reply)
	if err != nil {
		panic(err)
	}
	return reply.Arg0
}
